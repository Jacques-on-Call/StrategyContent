{"ast":null,"code":"var _jsxFileName = \"/workspaces/StrategyContent/proposal-tool/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ServiceBlock from './components/ServiceBlock';\nimport CostVisualizer from './components/CostVisualizer';\nimport ImpactVisualizer from './components/ImpactVisualizer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [services, setServices] = useState([]);\n  const [proposalServices, setProposalServices] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n  const [clientPrice, setClientPrice] = useState(0);\n  const [proposalId, setProposalId] = useState(null); // Assuming we have a proposal ID\n\n  useEffect(() => {\n    // Create a new proposal when the app loads\n    fetch('/proposal-tool/api/proposals', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ClientID: 1,\n        Status: 'Draft'\n      }) // Assuming client ID 1 for now\n    }).then(res => res.text()).then(text => {\n      const id = parseInt(text.split(': ')[1], 10);\n      setProposalId(id);\n    });\n\n    // Fetch services\n    fetch('/proposal-tool/api/services').then(res => res.json()).then(data => setServices(data)).catch(err => console.error(err));\n  }, []);\n  const addServiceToProposal = service => {\n    // Add the service to the proposal on the backend\n    fetch(`/api/proposal_services`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ProposalID: proposalId,\n        ServiceID: service.ServiceID,\n        Quantity: 1\n      })\n    }).then(() => {\n      setProposalServices([...proposalServices, service]);\n    });\n  };\n  const removeServiceFromProposal = serviceToRemove => {\n    // This is a bit tricky since we don't have the ProposalServiceID.\n    // For now, we'll just remove it from the frontend.\n    // A better implementation would be to fetch the ProposalServiceID when adding the service.\n    setProposalServices(proposalServices.filter(s => s.ServiceID !== serviceToRemove.ServiceID));\n  };\n  useEffect(() => {\n    if (proposalId) {\n      // Recalculate cost\n      fetch(`/api/proposals/${proposalId}/calculate-cost`).then(res => res.json()).then(data => {\n        setTotalCost(data.totalCost);\n        setClientPrice(data.clientPrice);\n      });\n    }\n  }, [proposalServices, proposalId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"DigitalView Dynamic Proposal Tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"services-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), services.map(service => /*#__PURE__*/_jsxDEV(ServiceBlock, {\n          service: service,\n          onAdd: addServiceToProposal\n        }, service.ServiceID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"proposal-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Proposal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: proposalServices.map(service => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [service.Name, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeServiceFromProposal(service),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, service.ServiceID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CostVisualizer, {\n          totalCost: totalCost,\n          clientPrice: clientPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImpactVisualizer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SJu95UieoHqq3bd0KMXXGlI/GiY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ServiceBlock","CostVisualizer","ImpactVisualizer","jsxDEV","_jsxDEV","App","_s","services","setServices","proposalServices","setProposalServices","totalCost","setTotalCost","clientPrice","setClientPrice","proposalId","setProposalId","fetch","method","headers","body","JSON","stringify","ClientID","Status","then","res","text","id","parseInt","split","json","data","catch","err","console","error","addServiceToProposal","service","ProposalID","ServiceID","Quantity","removeServiceFromProposal","serviceToRemove","filter","s","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onAdd","Name","onClick","_c","$RefreshReg$"],"sources":["/workspaces/StrategyContent/proposal-tool/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ServiceBlock from './components/ServiceBlock';\nimport CostVisualizer from './components/CostVisualizer';\nimport ImpactVisualizer from './components/ImpactVisualizer';\nimport './App.css';\n\nfunction App() {\n  const [services, setServices] = useState([]);\n  const [proposalServices, setProposalServices] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n  const [clientPrice, setClientPrice] = useState(0);\n  const [proposalId, setProposalId] = useState(null); // Assuming we have a proposal ID\n\n  useEffect(() => {\n    // Create a new proposal when the app loads\n    fetch('/proposal-tool/api/proposals', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ClientID: 1, Status: 'Draft' }) // Assuming client ID 1 for now\n    })\n      .then(res => res.text())\n      .then(text => {\n        const id = parseInt(text.split(': ')[1], 10);\n        setProposalId(id);\n      });\n\n    // Fetch services\n    fetch('/proposal-tool/api/services')\n      .then(res => res.json())\n      .then(data => setServices(data))\n      .catch(err => console.error(err));\n  }, []);\n\n  const addServiceToProposal = (service) => {\n    // Add the service to the proposal on the backend\n    fetch(`/api/proposal_services`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ ProposalID: proposalId, ServiceID: service.ServiceID, Quantity: 1 })\n    }).then(() => {\n      setProposalServices([...proposalServices, service]);\n    });\n  };\n\n  const removeServiceFromProposal = (serviceToRemove) => {\n    // This is a bit tricky since we don't have the ProposalServiceID.\n    // For now, we'll just remove it from the frontend.\n    // A better implementation would be to fetch the ProposalServiceID when adding the service.\n    setProposalServices(proposalServices.filter(s => s.ServiceID !== serviceToRemove.ServiceID));\n  }\n\n  useEffect(() => {\n    if (proposalId) {\n      // Recalculate cost\n      fetch(`/api/proposals/${proposalId}/calculate-cost`)\n        .then(res => res.json())\n        .then(data => {\n          setTotalCost(data.totalCost);\n          setClientPrice(data.clientPrice);\n        });\n    }\n  }, [proposalServices, proposalId]);\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>DigitalView Dynamic Proposal Tool</h1>\n      </header>\n      <main>\n        <div className=\"services-container\">\n          <h2>Services</h2>\n          {services.map(service => (\n            <ServiceBlock key={service.ServiceID} service={service} onAdd={addServiceToProposal} />\n          ))}\n        </div>\n        <div className=\"proposal-container\">\n          <h2>Your Proposal</h2>\n          <ul>\n            {proposalServices.map(service => (\n              <li key={service.ServiceID}>\n                {service.Name}\n                <button onClick={() => removeServiceFromProposal(service)}>Remove</button>\n              </li>\n            ))}\n          </ul>\n          <CostVisualizer totalCost={totalCost} clientPrice={clientPrice} />\n          <ImpactVisualizer />\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}