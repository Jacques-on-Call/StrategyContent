/* ===== MAIN QUIZ CONTAINER ===== */
.quiz-container {
    max-width: 600px;
    margin: 20px auto;
    background-color: var(--green);
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    padding: 20px;
}

/* ===== INTRO AND QUESTION SECTIONS ===== */
/* These need white/light backgrounds for readability */
#intro-container.intro,
.question {
    background-color: var(--white) !important;
    color: var(--black) !important;
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 15px;
}

#intro-container h3,
.question h4,
.question p {
    color: var(--black) !important;
}

/* ===== PROGRESS BAR ===== */
.progress-container {
    width: 100%;
    background-color: rgba(255, 255, 255, 0.3);
    height: 10px;
    margin-bottom: 20px;
    border-radius: 5px;
    overflow: hidden;
}

.progress-fill {
    height: 100%;
    background-color: var(--light-green);
    border-radius: 5px;
    transition: width 0.5s ease;
}

/* ===== OPTION BUTTONS ===== */
/* Replace your existing .option-button styles with this: */

.quiz-option-btn {
    display: block;
    width: 100%;
    padding: 12px 15px;
    margin: 10px 0;
    text-align: left;
    background: var(--white);  /* Changed: Start with white background */
    color: #000000 !important;
    border: 2px solid var(--blue);  /* Changed: Blue border for visibility */
    border-radius: 5px;
    cursor: pointer;
    font-weight: normal;
    transition: all 0.2s ease;
}

.quiz-option-btn:hover {
    background-color: var(--light-grey);
    border-color: var(--blue);
    color: var(--black) !important;
}

.quiz-option-btn.selected {
    background-color: var(--blue);
    border-color: var(--blue);
    color: var(--white) !important;  /* White text on blue background */
}

/* ===== RESULTS CONTAINER ===== */
/* Keep results with green background but ensure text is white */
.quiz-container .results-container {
    background-color: transparent; /* Let the green container background show through */
    color: #000000 !important;
    padding: 0; /* Remove extra padding since it's already on the main container */
}

/* ===== RESULTS CONTENT STYLING ===== */
/* Profile badge - keep existing gradient */
.quiz-container .profile-badge {
    background: linear-gradient(135deg, var(--blue), var(--green));
    color: var(--white);
    padding: 30px;
    border-radius: 20px;
    box-shadow: 0 8px 24px rgba(0, 57, 113, 0.2);
		font-size: 8em;
    text-align: center; /* Center content for better look */
}

.quiz-container .profile-badge h2,
.quiz-container .profile-badge p {
    color: var(--white) !important;
}

/* Cards within results - white background for readability */
.quiz-container .card {
    background: var(--white);
    color: var(--black) !important;
    border-radius: 12px;
    padding: 25px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    border: 1px solid var(--light-grey);
    margin-bottom: 15px; /* Add some spacing between cards */
}

.quiz-container .card h3 {
    color: var(--blue) !important;
    margin-top: 0;
    margin-bottom: 15px;
    border-bottom: 2px solid var(--light-green);
    padding-bottom: 8px;
}

.quiz-container .card h4,
.quiz-container .card h5,
.quiz-container .card p,
.quiz-container .card li {
    color: var(--black) !important;
}

/* Spectrum visualization */
.quiz-container .spectrum-visualization {
    margin-bottom: 20px;
}

.quiz-container .spectrum-item {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}

.quiz-container .spectrum-label {
    display: flex;
    align-items: center;
    min-width: 120px;
    font-weight: 500;
    color: var(--dark-grey);
}

.quiz-container .spectrum-label span:first-child {
    margin-right: 8px;
    font-size: 1.2em;
}

.quiz-container .spectrum-bar {
    flex: 1;
    height: 10px;
    background: var(--light-grey);
    border-radius: 5px;
    margin: 0 10px;
    overflow: hidden;
}

.quiz-container .spectrum-fill {
    height: 100%;
    border-radius: 5px;
    background-color: var(--blue); /* Default fill color */
}

.quiz-container .spectrum-percentage {
    font-weight: bold;
    color: var(--blue);
    min-width: 30px;
    text-align: right;
}

/* Insight boxes and content strategy */
.quiz-container .insight-box,
.quiz-container .content-strategy {
    background: rgba(0, 57, 113, 0.05);
    padding: 15px;
    border-radius: 8px;
    margin-bottom: 15px;
}

.quiz-container .insight-box p,
.quiz-container .content-strategy p {
    color: var(--black) !important;
    line-height: 1.6;
}

/* Trait tags */
.quiz-container .traits-container {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-bottom: 15px;
}

.quiz-container .trait-tag {
    display: inline-block;
    background: var(--white);
    color: var(--black) !important;
    border: 2px solid var(--blue);
    border-radius: 20px;
    padding: 6px 12px;
    font-size: 0.9em;
    font-weight: 500;
}

/* Action steps */
.quiz-container .action-steps {
    margin-bottom: 20px;
}

.quiz-container .action-step {
    background: rgba(199, 234, 70, 0.1);
    padding: 15px;
    border-radius: 8px;
    border-left: 4px solid var(--light-green);
    margin-bottom: 10px;
}

.quiz-container .action-step h5 {
    color: var(--green);
    margin-top: 0;
    margin-bottom: 5px;
}

.quiz-container .action-step p {
    color: var(--black) !important;
    line-height: 1.5;
}

/* Lists */
.quiz-container .strengths-list,
.quiz-container .considerations-list {
    list-style: none;
    padding: 0;
    margin-bottom: 15px;
}

.quiz-container .strengths-list li,
.quiz-container .considerations-list li {
    color: var(--black) !important;
    margin-bottom: 8px;
}

.quiz-container .check-icon {
    color: var(--green);
    font-weight: bold;
    margin-right: 8px;
}

.quiz-container .warning-icon {
    color: orange; /* Or another warning color */
    margin-right: 8px;
}

/* Results footer */
.quiz-container .results-footer {
    background: linear-gradient(135deg, var(--blue), var(--green));
    color: var(--white);
    padding: 30px;
    border-radius: 15px;
    text-align: center;
    margin-top: 20px;
}

.quiz-container .call-to-action h3,
.quiz-container .call-to-action p {
    color: var(--white) !important;
}

/* ===== BUTTONS ===== */
.quiz-container button {
    background-color: var(--blue);
    color: var(--white) !important;
    padding: 12px 24px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    transition: all 0.3s ease;
    margin-top: 15px;
    display: inline-block; /* To allow margin on sides if needed */
}

.quiz-container button:hover {
    background-color: #002147; /* Darker blue on hover */
}

/* Start button */
.quiz-container #start-button {
    background-color: var(--blue);
}

/* Next button */
.quiz-container #next-button {
    background-color: var(--scarlet) !important;
}

.quiz-container #next-button:hover {
    background-color: var(--dark-scarlet) !important;
}

.quiz-container #next-button:disabled {
    background-color: var(--light-grey) !important;
    color: var(--grey) !important;
    cursor: not-allowed;
}

/* CTA button in results */
.quiz-container .cta-button {
    background: var(--white);
    color: var(--blue) !important;
    border: 2px solid var(--white);
    padding: 15px 30px;
    border-radius: 25px;
    font-size: 1.1em;
}

.quiz-container .cta-button:hover {
    background: var(--light-green);
    border-color: var(--light-green);
}

/* ===== ANIMATIONS AND RESPONSIVE ===== */
.fadeInUp {
    animation: fadeInUp 0.6s ease forwards;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Loading state */
.results-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 200px;
}

.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-top: 4px solid var(--white);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .quiz-container {
        margin: 10px;
        padding: 15px;
    }

    .results-grid {
        grid-template-columns: 1fr;
    }

    .spectrum-item {
        flex-direction: column;
        align-items: stretch;
    }

    .spectrum-label {
        margin-bottom: 8px;
        min-width: auto;
    }

    .spectrum-bar {
        margin: 0 0 8px 0;
    }
}
/* === Digital Impact Compass Specific Overrides/Additions to quiz.css === */
/* These styles are specifically for the "Compass" app, adapting to quiz.css's existing structure */

/* Main Compass App Container - Uses quiz-container as base but allows slight overrides */
/* Ensure your main .quiz-container rules are defined BEFORE this, or merge strategically. */
#app-container.quiz-container {
    max-width: var(--content-max-width, 900px); /* Align with blog content width, fallback for safety */
    margin: 30px auto; /* More vertical margin for blog embedding */
    padding: 30px;
    background-color: var(--white); /* White background for the app content area */
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.1); /* Keep distinct app shadow */
    box-sizing: border-box; /* Include padding in element's total width and height */
    color: var(--dark-grey); /* Ensure default text color for app content */
}

/* Compass Screen Visibility Rules */
.app-screen {
    display: none; /* All screens are hidden by default */
    padding: 0; /* Padding moved to inner elements for better control */
}

.app-screen.active {
    display: block; /* The active screen is visible */
    animation: fadeIn 0.5s ease-out; /* Smooth fade-in transition */
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Opt-In Screen specific text alignment */
#opt-in-screen h2,
#opt-in-screen p {
    text-align: center;
}

/* Question sections - now utilize the 'question' class, which might already be styled in quiz.css */
/* These ensure consistent appearance even if 'question' is styled differently for other quizzes */
.question {
    background-color: var(--white); /* White background for readability */
    color: var(--black); /* Black text */
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 15px; /* Spacing between questions */
}

.question h3,
.question h4,
.question p {
    color: var(--black); /* Ensure text is black within questions */
}

/* Headings for compass app */
#app-container h2 { /* Targeting h2 specifically within the compass app container */
    color: var(--blue); /* Primary blue for main titles */
    margin-bottom: 20px;
    font-size: 1.8em;
}

#app-container h3 { /* Targeting h3 specifically within the compass app container */
    color: var(--dark-grey); /* Dark grey for question titles */
    margin-bottom: 25px;
    font-size: 1.3em;
}

/* Input Fields (Radio & Checkbox) - Styled to look like quiz-option-btn */
/* This styling applies to the .input-group DIV that wraps each input and label */
.input-group {
    display: flex;
    align-items: center;
    cursor: pointer;
    padding: 12px 15px; /* Match quiz-option-btn padding */
    margin: 10px 0; /* Match quiz-option-btn margin */
    border: 2px solid var(--blue); /* Blue border like quiz-option-btn */
    border-radius: 5px; /* Match quiz-option-btn border-radius */
    transition: all 0.2s ease;
    background: var(--white);
    color: var(--black); /* Default text color */
}

.input-group:hover {
    background-color: var(--light-grey);
    border-color: var(--blue);
    color: var(--black);
}

input[type="radio"],
input[type="checkbox"] {
    margin-right: 12px;
    transform: scale(1.2); /* Make the radio/checkbox slightly larger */
    cursor: pointer;
    flex-shrink: 0; /* Prevent input from shrinking */
}

.input-group label {
    flex-grow: 1; /* Label takes remaining space */
    cursor: pointer;
    font-size: 1.1em;
    color: var(--dark-grey); /* Default label text color */
}

/* Style for selected radio/checkbox items */
input[type="radio"]:checked + label,
input[type="checkbox"]:checked + label {
    font-weight: bold;
    color: var(--white); /* White text when selected */
}

/* Apply selected styles to the parent .input-group when its child input is checked */
.input-group:has(input[type="radio"]:checked),
.input-group:has(input[type="checkbox"]:checked) {
    background-color: var(--blue); /* Blue background for selected option */
    border-color: var(--blue);
    color: var(--white); /* White text for selected option */
}


/* Buttons - Harmonized with existing quiz.css button styles */
/* Target buttons specifically within the compass app container to avoid global conflicts */
#app-container button {
    background-color: var(--blue); /* Default primary button color */
    color: var(--white);
    padding: 12px 24px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    transition: all 0.3s ease;
    margin-top: 15px;
    display: inline-block;
    width: 100%; /* Default to full width for consistency in single button scenarios */
}

#app-container button:hover {
    background-color: #002147; /* Darker blue on hover */
}

/* Specific compass buttons for distinct colors */
#start-compass-btn {
    background-color: var(--blue);
}
#start-compass-btn:hover {
    background-color: #002147;
}

.next-btn {
    background-color: var(--scarlet); /* Use scarlet for next buttons */
}
.next-btn:hover {
    background-color: var(--dark-scarlet);
}

.back-btn {
    background-color: var(--grey); /* Grey for back button */
}
.back-btn:hover {
    background-color: var(--dark-grey);
}

#generate-compass-btn {
    background-color: var(--scarlet); /* Use scarlet for the final action button */
}
#generate-compass-btn:hover {
    background-color: var(--dark-scarlet);
}

/* Button Group for Next/Back buttons - specific to compass app */
.button-group {
    display: flex;
    justify-content: space-between;
    gap: 15px; /* Space between buttons */
    margin-top: 30px;
}

.button-group button {
    width: auto; /* Allow buttons in a group to size naturally */
    flex-grow: 1; /* Distribute space evenly if needed */
}

/* Results Screen Specifics - Uses .results-container and .card */
/* This section styles the dynamic content of the blueprint */
#results-container #blueprint-content {
    background-color: transparent; /* Let the card background show through */
    padding: 0; /* Remove extra padding since it's now wrapped in a card */
    min-height: auto; /* Let content define height */
    overflow-y: visible; /* Prevent scrollbar unless card itself needs it */
    border: none; /* No border here, card provides it */
}

/* General .card styling should already be in your quiz.css, but ensure it applies to these dynamic cards */
.blueprint-summary.card,
.recommendation-card.card {
    background: var(--white);
    color: var(--black); /* Text color inside cards */
    border-radius: 12px;
    padding: 25px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
    border: 1px solid var(--light-grey);
    margin-bottom: 15px;
    margin-top: 15px; /* Add some spacing between cards */
}

.recommendation-card h5 {
    color: var(--blue); /* Blue heading for recommendation titles */
    margin-top: 0;
    margin-bottom: 15px;
    border-bottom: 2px solid var(--light-green); /* Green underline */
    padding-bottom: 8px;
}

.recommendation-card h6,
.recommendation-card p,
.recommendation-card ul,
.recommendation-card li {
    color: var(--black); /* Ensure text is black within recommendation cards */
}

.recommendation-card .rec-priority {
    background-color: var(--green);
    color: var(--white);
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 0.8em;
    font-weight: bold;
    display: inline-block;
    margin-bottom: 10px;
}

.recommendation-card .rec-pro-tip {
    font-style: italic;
    font-size: 0.9em;
    color: var(--grey);
    border-top: 1px dashed var(--light-grey);
    padding-top: 10px;
    margin-top: 15px;
}

/* Responsive adjustments specific to compass app */
@media (max-width: 768px) {
    #app-container.quiz-container {
        margin: 10px;
        padding: 15px;
    }
}

@media (max-width: 600px) {
    #app-container.quiz-container {
        padding: 20px;
    }
    #app-container h2 {
        font-size: 1.5em;
    }
    #app-container h3 {
        font-size: 1.1em;
    }
    #app-container button {
        padding: 10px 15px;
        font-size: 1em;
    }
    .button-group {
        flex-direction: column; /* Stack buttons vertically on small screens */
        gap: 10px;
    }
    .input-group {
        padding: 8px 12px;
    }
    input[type="radio"],
    input[type="checkbox"] {
        margin-right: 8px;
    }
    .input-group label {
        font-size: 1em;
    }
}

.context-text {
    background-color: var(--light-green); 
    border-left: 4px solid var(--light-green); 
    padding: 18px 20px;
    margin-bottom: 25px;
    border-radius: 4px;
    font-size: 1em;
    line-height: 1.6;
    color: var(--dark-grey); /* Keep the text dark for readability on light green */
}

.context-text p {
    margin: 0;
}

.quiz-wrapper {
    max-width: var(--content-max-width); /* Align with your blog's content width */
    margin: 40px auto; /* Center the quiz horizontally, provide vertical spacing */
    padding: 25px;
    background-color: var(--white); /* Use your white variable */
    border-radius: 8px; /* Maintain subtle rounded corners */
    border: 1px solid var(--light-grey); /* Subtle border using light-grey */
    font-family: var(--font-family); /* Use your defined font family */
    color: var(--dark-grey); /* Use your dark-grey for main text */
    box-shadow: 0 2px 5px rgba(0,0,0,0.05); /* Added a very light, subtle shadow back for depth */
}

#app-container {
    padding: 0; /* Ensures no extra padding within the container */
}

/* Context Text Styling */
.context-text {
    background-color: var(--light-grey); /* Use your light-grey for context background */
    border-left: 4px solid var(--blue); /* Blue left border for emphasis */
    padding: 18px 20px; /* Increased padding */
    margin-bottom: 25px; /* More space below context */
    border-radius: 4px;
    font-size: 1em; /* Slightly larger font for context text */
    line-height: 1.6; /* Improved line height for readability */
    color: var(--grey); /* Use your grey for context text */
}

.context-text p {
    margin: 0;
}

/* General app-screen improvements */
.app-screen {
    padding: 0px;
    text-align: left;
}

.app-screen h2,
.app-screen h3 {
    color: var(--blue); /* Use your blue for headings */
    margin-bottom: 30px; /* More space below headings */
    font-size: 2em; /* Slightly larger H2 for impact */
    font-weight: 700;
    text-align: center;
}

.app-screen h3 {
    font-size: 1.6em; /* Slightly larger H3 */
    margin-bottom: 25px; /* More space below H3 */
}

.app-screen p {
    font-size: 1.1em;
    line-height: 1.6;
    margin-bottom: 30px;
    text-align: left;
}

/* Input group styling for better spacing and alignment */
.input-group {
    display: flex;
    align-items: center;
    margin-bottom: 12px; /* Reduced space between options for compactness */
    padding: 14px 18px; /* Generous padding for clickable area */
    border: 1px solid var(--light-grey);
    border-radius: 8px; /* Slightly more rounded corners for softness */
    transition: all 0.3s ease-in-out; /* Smoother transition */
    cursor: pointer;
    background-color: var(--white);
    position: relative; /* Needed for potential future checkmark/dot animation */
    overflow: hidden; /* Ensure content doesn't spill out */
}

.input-group:hover {
    background-color: #f7f9fc; /* A very subtle off-white for hover */
    border-color: var(--blue); /* Blue border on hover */
    box-shadow: 0 2px 8px rgba(0,0,0,0.08); /* More pronounced shadow on hover for engagement */
    transform: translateY(-2px); /* Slight lift on hover */
}

.input-group input[type="radio"],
.input-group input[type="checkbox"] {
    margin-right: 15px; /* Space between input and label */
    appearance: none;
    -webkit-appearance: none;
    width: 22px; /* Slightly larger inputs */
    height: 22px; /* Slightly larger inputs */
    border: 2px solid var(--grey); /* Use your grey for initial border */
    border-radius: 50%; /* For radio buttons */
    outline: none;
    cursor: pointer;
    position: relative;
    flex-shrink: 0; /* Prevent input from shrinking */
    transition: border-color 0.2s ease;
}

.input-group input[type="checkbox"] {
    border-radius: 6px; /* For checkboxes, less rounded than radio */
}

.input-group input[type="radio"]:checked,
.input-group input[type="checkbox"]:checked {
    border-color: var(--blue); /* Blue border when checked */
}


.input-group input[type="radio"]:checked::before {
    content: '';
    display: block;
    width: 14px; /* Larger inner dot */
    height: 14px; /* Larger inner dot */
    background-color: var(--blue); /* Blue for checked state */
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: background-color 0.2s ease;
}

.input-group input[type="checkbox"]:checked::before {
    content: '✔';
    display: block;
    width: 100%;
    height: 100%;
    background-color: var(--blue); /* Blue for checked state */
    color: var(--white); /* White checkmark */
    text-align: center;
    line-height: 22px; /* Match height of checkbox for vertical centering */
    font-size: 14px;
    border-radius: 5px; /* Match checkbox border-radius - 1px */
    position: absolute;
    top: 0;
    left: 0;
}

.input-group label {
    flex-grow: 1; /* Allow label to take up available space */
    text-align: left;
    cursor: pointer;
    font-weight: 500; /* Slightly bolder text for options */
    color: var(--dark-grey); /* Darker text for options for contrast */
    font-size: 1.1em; /* Slightly larger font for readability */
    white-space: nowrap; /* Attempt to keep text on a single line */
    overflow: hidden; /* Hide overflow if text is too long */
    text-overflow: ellipsis; /* Add ellipsis if text is cut off */
    line-height: 1.3; /* Ensure consistent line height */
    padding-top: 2px; /* Minor vertical alignment adjustment */
    padding-bottom: 2px;
}

/* If label text is too long and must wrap, allow it gracefully */
@media (max-width: 480px) {
    .input-group label {
        white-space: normal; /* Allow text to wrap on smaller screens */
        text-overflow: clip; /* No ellipsis if wrapping */
    }
}


/* Button Group Styling */
.button-group {
    display: flex;
    justify-content: space-between;
    margin-top: 35px; /* More space above buttons */
    gap: 15px;
}

.button-group button {
    flex: 1;
    padding: 14px 25px; /* Larger buttons for easier tapping */
    font-size: 1.15em; /* Slightly larger font */
    cursor: pointer;
    border: none;
    border-radius: 5px;
    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.2s ease;
    min-width: 120px;
    font-weight: bold;
}

/* Primary buttons */
#start-compass-btn,
.next-btn,
#generate-compass-btn {
    background-color: var(--blue);
    color: var(--white);
}

#start-compass-btn:hover,
.next-btn:hover,
#generate-compass-btn:hover {
    background-color: #002b55; /* A slightly darker blue on hover */
    transform: translateY(-3px); /* More pronounced lift */
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15); /* Stronger shadow */
}

/* Back button */
.back-btn, #start-over-btn {
    background-color: var(--light-grey);
    color: var(--grey);
    border: 1px solid var(--grey);
}

.back-btn:hover, #start-over-btn:hover {
    background-color: #e0e0e0;
    transform: translateY(-3px); /* More pronounced lift */
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
}

/* Hide screens */
.hidden {
    display: none;
}

.active {
    display: block;
}

/* Responsive adjustments */
@media (max-width: 600px) {
    .quiz-wrapper {
        margin: 20px 0; /* Remove horizontal margin, allow it to stretch for full width on mobile */
        padding: 15px;
        border-radius: 0;
        border: none;
        box-shadow: none;
    }

    .app-screen h2 {
        font-size: 1.8em; /* Adjusted for smaller screens */
    }

    .app-screen h3 {
        font-size: 1.4em; /* Adjusted for smaller screens */
    }

    .input-group {
        flex-direction: row; /* Keep options horizontal if possible on mobile too */
        justify-content: flex-start; /* Align content to the left */
        align-items: center; /* Keep items vertically centered */
        padding: 12px;
        margin-bottom: 10px;
    }
    
    .input-group input {
        margin-right: 12px; /* Maintain space */
        margin-bottom: 0; /* No vertical margin for inputs */
    }

    .input-group label {
        padding-right: 0;
        white-space: normal; /* Allow text to wrap on smaller screens */
        text-overflow: clip; /* No ellipsis if wrapping */
    }

    .button-group {
        flex-direction: column;
    }

    .button-group button {
        margin-bottom: 10px;
        width: 100%;
    }
}
